[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "saturnin"
dynamic = ["version"]
description = "Firebird Butler platform for Python"
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [
  { name = "Pavel Cisar", email = "pcisar@users.sourceforge.net"},
]
keywords = ["Saturnin", "Firebird", "Butler", "Platform", "ZeroMQ"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Logging",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Object Brokering",
    "Topic :: Database"
    ]
dependencies = [
    "tomli-w~=1.2",
    "pyzmq~=26.4",
    "protobuf~=5.29",
    "firebird-butler-protobuf~=2.0",
    "firebird-base~=2.0",
    "firebird-uuid>=0.4.0",
    "typer~=0.15",
    "rich~=14.0",
    "prompt-toolkit~=3.0",
    "psutil~=7.0"
    ]

[project.optional-dependencies]
firebird = ["firebird-driver~=2.0", "firebird-lib~=2.0"]

[project.urls]
Home = "http://firebirdsql.org/en/saturnin/"
Documentation = "https://saturnin.rtfd.io"
Issues = "https://github.com/FirebirdSQL/saturnin/issues"
Funding = "https://github.com/sponsors/pcisar"
Source = "https://github.com/FirebirdSQL/saturnin"

[project.scripts]
saturnin = "saturnin._scripts.cli:main"
saturnin-daemon = "saturnin._scripts.daemon:main"
saturnin-service = "saturnin._scripts.svcrun:main"
saturnin-bundle = "saturnin._scripts.bundlerun:main"

[project.entry-points."saturnin.no_repl_commands"]
"initialize" = "saturnin._scripts.commands.site:initialize"
"create.home" = "saturnin._scripts.commands.site:create_home"

[project.entry-points."saturnin.commands"]
"list.services" = "saturnin._scripts.commands.pkg:list_services"
"list.applications" = "saturnin._scripts.commands.pkg:list_applications"
"list.packages" = "saturnin._scripts.commands.pkg:list_packages"
"list.directories" = "saturnin._scripts.commands.site:list_directories"
"list.configs" = "saturnin._scripts.commands.site:list_configs"
"list.datafiles" = "saturnin._scripts.commands.site:list_datafiles"
"list.recipes" = "saturnin._scripts.commands.recipes:list_recipes"
"list.daemons" = "saturnin._scripts.commands.daemons:list_daemons"
"list.oids" = "saturnin._scripts.commands.oids:list_oids"
"update.oids" = "saturnin._scripts.commands.oids:update_oids"
"update.registry" = "saturnin._scripts.commands.pkg:update_registry"
"pip" = "saturnin._scripts.commands.pkg:pip"
"show.config" = "saturnin._scripts.commands.site:show_config"
"show.recipe" = "saturnin._scripts.commands.recipes:show_recipe"
"show.oid" = "saturnin._scripts.commands.oids:show_oid"
"show.service" = "saturnin._scripts.commands.pkg:show_service"
"show.application" = "saturnin._scripts.commands.pkg:show_application"
"show.daemon" = "saturnin._scripts.commands.daemons:show_daemon"
"edit.config" = "saturnin._scripts.commands.site:edit_config"
"edit.recipe" = "saturnin._scripts.commands.recipes:edit_recipe"
"create.config" = "saturnin._scripts.commands.site:create_config"
"stop.daemon" = "saturnin._scripts.commands.daemons:stop_daemon"
"install.package" = "saturnin._scripts.commands.pkg:install_package"
"install.recipe" = "saturnin._scripts.commands.recipes:install_recipe"
"uninstall.package" = "saturnin._scripts.commands.pkg:uninstall_package"
"uninstall.recipe" = "saturnin._scripts.commands.recipes:uninstall_recipe"
"create.recipe" = "saturnin._scripts.commands.recipes:create_recipe"

[tool.hatch.version]
path = "src/saturnin/base/__init__.py"

[tool.hatch.build.targets.sdist]
include = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/saturnin"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.default]
dependencies = [
]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.11", "3.12", "3.13"]

[tool.hatch.envs.doc]
detached = false
platforms = ["linux"]
dependencies = [
  "Sphinx==7.2.6",
  "sphinx-bootstrap-theme>=0.8.1",
  "sphinx-autodoc-typehints>=1.24.0",
  "doc2dash>=3.0.0"
]
[tool.hatch.envs.doc.scripts]
build = "cd docs ; make html"
docset = [
  "cd docs ; doc2dash -u https://firebird-driver.readthedocs.io/en/latest/ -f -i ./_static/fb-favicon.png -n firebird-driver ./_build/html/",
  "cd docs; VERSION=`hatch version` ; tar --exclude='.DS_Store' -cvzf ../dist/firebird-driver-$VERSION-docset.tgz firebird-driver.docset",
]

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.format]
preview = true
quote-style = "single"
exclude = ["*.pyi"]

[tool.ruff.lint]
select = ["A", "ARG", "B", "C", "DTZ", "E", "EM", "F", "FBT", "I", "ICN", "ISC", "N",
  "PLC", "PLE", "PLR", "PLW", "Q", "RUF", "S", "T", "TID", "UP", "W", "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  #
  "E741",
  # Allow relative imports
  "TID252",
  # Allow literals in exceptions
  "EM101", "EM102",
  # Single quotes instead double
  "Q000"
]
unfixable = [
  # Don't touch unused imports
  "F401",
  # Don't change single quotes to double
  "Q000"
]
exclude = ["*_pb2.py", "*.pyi", "tests/*", "docs/*", "work/*"]

[tool.ruff.lint.isort]
known-first-party = ["firebird.driver", "firebird.base", "firebird.lib", "firebird.uuid"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"transport.py" = ["ARG002"]
"controller.py" = ["ARG002"]
"onepipe.py" = ["ARG002"]
"filter.py" = ["ARG002"]
"iccp.py" = ["ARG002"]
"fbdp.py" = ["ARG002"]
"fbsp.py" = ["ARG002"]
"console.py" = ["E501"]
"svcrun.py" = ["T201", "E501", "ARG002"]
"bundlerun.py" = ["T201", "E501", "ARG002"]
"completers.py" = ["ARG001"]
"cli.py" = ["A002"]
"__init__.py" = ["F401"]

[tool.coverage.run]
source_pkgs = ["saturnin", "tests"]
branch = true
parallel = true
omit = [
]

[tool.coverage.paths]
firebird_base = ["src/saturnin"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

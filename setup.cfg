[metadata]
name = saturnin
version = 0.7.0
description = Firebird Butler platform for Python
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
author = Pavel Císař
author_email = pcisar@users.sourceforge.net
license = MIT
license_file = LICENSE
url = http://firebirdsql.org/en/saturnin/
keywords = Saturnin Firebird Butler Platform ZeroMQ
project_urls =
    Documentation = https://saturnin.rtfd.io
    Bug Reports = https://github.com/FirebirdSQL/saturnin/issues
    Funding = https://www.firebirdsql.org/en/donate/
    Source = https://github.com/FirebirdSQL/saturnin
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: System Administrators
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Operating System :: POSIX :: Linux
    Operating System :: Microsoft :: Windows
    Operating System :: MacOS
    Topic :: System :: Systems Administration
    Topic :: System :: Monitoring
    Topic :: System :: Logging
    Topic :: Software Development :: Libraries
    Topic :: Software Development :: Libraries :: Application Frameworks
    Topic :: Software Development :: Object Brokering
    Topic :: Database

[options]
zip_safe = True
python_requires = >=3.8, <4
install_requires =
    build
    toml
    packaging>=20.8
    pyzmq>=22.0.0
    protobuf>=3.14.0, <4
    psutil>=5.8.0
    firebird-butler-protobuf>=0.3.0
    firebird-base>=1.1.0, <2
packages = find_namespace:

[options.packages.find]
include = saturnin.*

[options.entry_points]
console_scripts =
    saturnin = saturnin._scripts.cli:main
    saturnin-site = saturnin._scripts.site:main
    saturnin-pkg = saturnin._scripts.pkg:main
    saturnin-daemon = saturnin._scripts.daemon:main
    saturnin-service = saturnin._scripts.svcrun:main
    saturnin-bundle = saturnin._scripts.bundlerun:main
saturnin.commands.cli =
    saturnin.start = saturnin._scripts.commands.cli:StartCommand
    saturnin.stop = saturnin._scripts.commands.cli:StopCommand
    saturnin.list = saturnin._scripts.commands.cli:ListCommand
    saturnin.help = saturnin.lib.command:HelpCommand
saturnin.commands.pkg =
    saturnin.install = saturnin._scripts.commands.pkg:InstallCommand
    saturnin.uninstall = saturnin._scripts.commands.pkg:UninstallCommand
    saturnin.list = saturnin._scripts.commands.pkg:ListCommand
    saturnin.pip = saturnin._scripts.commands.pkg:PipCommand
    saturnin.help = saturnin.lib.command:HelpCommand
saturnin.commands.site =
    saturnin.init = saturnin._scripts.commands.site:InitCommand
    saturnin.create = saturnin._scripts.commands.site:CreateCommand
    saturnin.edit = saturnin._scripts.commands.site:EditCommand
    saturnin.list = saturnin._scripts.commands.site:ListCommand
    saturnin.help = saturnin.lib.command:HelpCommand

[bdist_wheel]
# This flag says to generate wheels that support both Python 2 and Python
# 3. If your code will not run unchanged on both Python 2 and 3, you will
# need to generate separate wheels for each Python version that you
# support.
universal=0

